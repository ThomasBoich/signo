version: '3.5'
services:
  app:
    build: .
    volumes:
      - './signo/settings_server.py:/app/src/signo/settings_local.py'
      - '/opt/django/static_files:/opt/django/static_files'
      - '/opt/django/media_files:/opt/django/media_files'

    command: python manage.py runserver 0.0.0.0:8000

    environment:
      - VIRTUAL_HOST=sign-o.ru, 
      - LETSENCRYPT_HOST=sign-o.ru

    depends_on:
      - app_migrate
      - app_collectstatic

    restart: always


  app_migrate:
    build: .

    volumes:
      - './signo/settings_server.py:/app/src/signo/settings_local.py'
      - '/opt/django/static_files:/opt/django/static_files'
      - '/opt/django/media_files:/opt/django/media_files'

    command: "python manage.py migrate --noinput"


  app_collectstatic:
    build: .
    volumes:
      - './signo/settings_server.py:/app/src/signo/settings_local.py'
      - '/opt/django/static_files:/opt/django/static_files'
      - '/opt/django/media_files:/opt/django/media_files'

  
  db:
    image: postgres:14
    environment:
      POSTGRES_PASSWORD: 1234Rtyu
    volumes:
      - "../db:/var/lib/postgresql/data"

    command: ["postgres", "-c", "log_statement=all"]
    restart: always


  nginx:
    image: nginx
    volumes:
      - '/opt/django/static_files:/usr/share/nginx/html/static'
      - '/opt/django/media_files:/usr/share/nginx/html/media'
    
    environment:
      - VIRTUAL_HOST=static.sign-o.ru
      - LETSENCRYPT_HOST=static.sign-o.ru
    restart: always


  nginx-proxy: 
    image: nginxproxy/nginx-proxy
    container_name: nginx-proxy
    ports: 
      - "80:80"
      - "443:443"
    volumes:
      - certs:/etc/nginx/certs
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - dhparam:/etc/nginx/dhparam
      - conf:/etc/nginx/conf.d
      - ./client_max_body_size.conf:/etc/nginx/conf.d/client_max_body_size.conf:ro

    restart: unless-stopped 
    depends_on:
      - app
    


  nginx-proxy-acme:
    image: nginxproxy/acme-companion
    container_name: nginx-proxy-acme
    depends_on:
      - nginx-proxy
    volumes:
      - certs:/etc/nginx/certs
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - acme:/etc/acme.sh
      - dhparam:/etc/nginx/dhparam
      - conf:/etc/nginx/conf.d

    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy


volumes:
  certs:
  vhost:
  html:
  acme:
  dhparam:
  conf: